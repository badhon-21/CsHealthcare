

@model CsHealthcare.ViewModel.Ambulance.RentAmbulanceModel

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    @*<div class="col-md-3"></div>*@
    <div class="col-md-12">
        <!-- BEGIN Portlet PORTLET-->
        <div class="portlet light">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-question font-green-sharp"></i>
                    <span class="caption-subject font-green-sharp uppercase">Rent Ambulance Information</span>
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse">
                    </a>
                    <a href="javascript:;" class="fullscreen">
                    </a>
                </div>
                <div class="actions margin-right-10">

                </div>
            </div>
            @*<hr style="margin-top: 0;">*@
            <div class="portlet-body portlet-empty">

                @using (Html.BeginForm())
                {
                    <div class="modal-body">
                        <div class="row col-md-12 radio-list text-center" style="margin-bottom: 10px;">
                            <label class="radio-inline">
                                <input type="radio" name="VehicleFor" class="Hospital" id="Hospital" onclick="initVehicleType() " value="Hospital" checked> Hospital
                            </label>
                            <label class="radio-inline">
                                <input type="radio" name="VehicleFor" class="Outside" id="Outside" onclick="loadVehicleType() " value="OutSide"> Outside
                            </label>
                            <div style="display: none;">
                                <input type="hidden" id="txtVehicleFor" name="txtVehicleFor" />
                            </div>
                        </div>
                        <div class="form-horizontal" id="divhospital">
                            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                            <input type="hidden" id="VehicleId" name="VehicleId" value="" />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Date, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    <input class="form-control datetimepicker" type="datetime" name="Date" id="Date" placeholder="">
                                    @Html.ValidationMessageFor(model => model.Date, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.VehicleName, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    <input class="form-control" id="VehicleName" name="VehicleName" value="" placeholder="" />
                                    @*@Html.EditorFor(model => model.VehicleName, new {htmlAttributes = new {@class = "form-control"}})*@
                                    @Html.ValidationMessageFor(model => model.VehicleName, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Driver, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Driver, new {htmlAttributes = new {@class = "form-control",}})
                                    @Html.ValidationMessageFor(model => model.Driver, "", new {@class = "text-danger"})
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 row">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FromRoute, htmlAttributes: new {@class = "control-label col-md-2"})
                                    <div class="col-md-2">
                                        @Html.EditorFor(model => model.FromRoute, new {htmlAttributes = new {@class = "form-control",}})
                                        @Html.ValidationMessageFor(model => model.FromRoute, "", new {@class = "text-danger"})
                                    </div>

                                    @Html.LabelFor(model => model.ToRoute, htmlAttributes: new {@class = "control-label col-md-2"})
                                    <div class="col-md-2">
                                        @Html.EditorFor(model => model.ToRoute, new {htmlAttributes = new {@class = "form-control",}})
                                        @Html.ValidationMessageFor(model => model.ToRoute, "", new {@class = "text-danger"})
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Kelometer, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Kelometer, new {htmlAttributes = new {@class = "form-control",}})
                                    @Html.ValidationMessageFor(model => model.Kelometer, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Amount, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Amount, new {htmlAttributes = new {@class = "form-control",}})
                                    @Html.ValidationMessageFor(model => model.Amount, "", new {@class = "text-danger"})
                                </div>
                            </div>
                        </div>
                        <div class="form-horizontal" id="divOutside">
                            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                            <div class="row col-md-12 radio-list text-left" style="margin-top: 30px;">
                                <i class="fa fa-question font-green-sharp"></i>
                                <span class="caption-subject font-green-sharp uppercase">Party Contact Information</span>
                                <hr/>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.PartyContactName, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.PartyContactName, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.ValidationMessageFor(model => model.PartyContactName, "", new {@class = "text-danger"})
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PartyAddress, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.PartyAddress, new {htmlAttributes = new {@class = "form-control",}})
                                    @Html.ValidationMessageFor(model => model.PartyAddress, "", new {@class = "text-danger"})
                                </div>


                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PartyMobileNumber, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.PartyMobileNumber, new {htmlAttributes = new {@class = "form-control", }})
                                    @Html.ValidationMessageFor(model => model.PartyMobileNumber, "", new {@class = "text-danger"})
                                </div>
                            </div>





                        </div>
                    </div>

                    <div class="modal-footer">
                        <a class="btn default" style="width: 15%;" href="@Url.Action("Index", "RentAmbulance", new {Area = "Ambulance" })">Cancel</a>
                        <input type="submit" value="Save" class="btn green" style="width: 15%;" />
                    </div>

                }
            </div>
        </div>

        <!-- END Portlet PORTLET-->
    </div>
    @*<div class="col-md-3"></div>*@
</div>
@section page_styles {


    <link href="~/assets/global/plugins/typeahead/typeahead.css" rel="stylesheet" />

    <style>
        .tt-query {
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        }

        .tt-hint {
            color: #999;
        }

        .tt-dropdown-menu { /* used to be tt-dropdown-menu in older versions */
            width: 422px;
            margin-top: 4px;
            padding: 4px 0;
            background-color: #fff;
            border: 1px solid #ccc;
            border: 1px solid rgba(0, 0, 0, 0.2);
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            border-radius: 4px;
            -webkit-box-shadow: 0 5px 10px rgba(0,0,0,.2);
            -moz-box-shadow: 0 5px 10px rgba(0,0,0,.2);
            box-shadow: 0 5px 10px rgba(0,0,0,.2);
            max-height: 200px;
            overflow: auto;
        }

        .tt-suggestion {
            padding: 3px 20px;
            line-height: 24px;
        }

            .tt-suggestion.tt-cursor, .tt-suggestion:hover {
                color: #fff;
                background-color: #0097cf;
            }

            .tt-suggestion p {
                margin: 0;
            }
    </style>
}
@section Scripts {
    <script src="~/Scripts/jquery.format.1.05.js"></script>
    <script src="~/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>

<script src="~/Scripts/typeahead.bundle.min.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function () {
            $(".datetimepicker").datepicker();
            initVehicleAutoComplete();
           

        });
        function initVehicleAutoComplete() {
            $('#VehicleName').typeahead({
                hint: true,
                highlight: true,
                minLength: 2,
                limit: 8
            }, {
                source: function (searchString, cb) {
                    return $.ajax({
                        dataType: 'json',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        url: " /Ambulance/RentAmbulance/LoadVehicle",
                        data: "{'SearchString':'" + searchString + "'}",
                        chache: false,
                        success: function (data) {
                            var result = [];
                            $.each(data, function (index, val) {
                                result.push({
                                    Id: val.Id,
                                    Name: val.Title,
                                    value: val.Title
                                });
                            });
                            cb(result);
                        }
                    });
                }
            }).on("typeahead:selected", function (obj, ve) {
                $("#VehicleId").val(ve.Id);

                //$("#txtPatientName").val(patient.Name);
                //$("#txtMobileNumber").val(patient.Mobile);
            });

        }

        function initVehicleType() {

            $.ajax({
                type: "GET",
                cache: false,
                url: "@(@Url.Action("loadVehicleforHospital", "RentAmbulance", new {Area = "Ambulance" }))",
                data: { "VehicleFor": $('#Hospital').val() },
            dataType: "html",
            success: function (result) {
                //var value = JSON.parse(result);

                if (result != "Outside") {

                    $('#divhospital').show();
                    $('#divOutside').show();
                    $("#txtVehiclefor").val("Hospital");
                } else {
                    $('#divOutside').hide();
                }


            },
            error: function (xhr, ajaxOptions, thrownError) {
                //App.unblockUI();
                var msg = 'Fail to Vehicle list.';
                alert(msg);
            }
        });
        }
        function loadVehicleType() {

            $.ajax({
                type: "GET",
                cache: false,
                url: "@(@Url.Action("loadVehicleforoutside", "RentAmbulance", new {Area = "Ambulance" }))",
                data: { "VehicleFor": $('#Outside').val() },
            dataType: "html",
            success: function (result) {
                //var value = JSON.parse(result);


                if (result != "Hospital") {
                    $('#divOutside').show();
                    $('#divhospital').show();
                    $("#txtVehiclefor").val("Outside");

                } else {
                    $('#divSensitivity').show();
                }


            },
            error: function (xhr, ajaxOptions, thrownError) {
                //App.unblockUI();
                var msg = 'Fail to set sells list.';
                alert(msg);
            }
        });
        }

    </script>

}














