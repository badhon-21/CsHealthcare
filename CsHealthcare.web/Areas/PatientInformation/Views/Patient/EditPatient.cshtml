@model CsHealthcare.ViewModel.Patient.PatientInformationViewModel
@{
    ViewBag.Title = "EditPatient";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <!-- BEGIN Portlet PORTLET-->
        <div class="portlet light">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-question font-green-sharp"></i>
                    <span class="caption-subject font-green-sharp uppercase">Patient Information</span>
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse">
                    </a>
                    <a href="javascript:;" class="fullscreen">
                    </a>
                </div>
                <div class="actions margin-right-10">

                </div>
            </div>
            @*<hr style="margin-top: 0;">*@
            <div class="portlet-body portlet-empty">

                @using (Html.BeginForm())
                {
                    <div class="modal-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <input type="hidden" id="Id" name="Id" value="@ViewBag.PatientInformationId"/>
                            <input type="hidden" id="tId" name="tId" value="" />

                            <div class="form-group">
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })


                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-6">
                                        <input id="Age" required="" name="Age" value="@Model.Age" class="form-control " placeholder="" type="text" />
                                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })


                                    </div>
                                </div>

                                @*<label class="control-label col-md-2">Topic Image</label>*@
                                @*<div class="col-md-6">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-6">
                                            <img id="patient_image" Title="No Image" style="width: 45%; margin-top: 5px;" class="patient-pic img-responsive"
                                                 src="~/Image/no-image.jpg" alt="No Image" />


                                            <a class="btn blue-ebonyclay" href="@Url.Action("ImageView", "Patient", new {Area = "PatientInformation"})" data-modal="" style="margin-top: 5px;">
                                                <i class="fa fa-upload"></i>
                                                Upload Image
                                            </a>
                                            @Html.Hidden("filePath", string.Empty, new { id = "filePath" })
                                        </div>
                                    </div>*@

                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @*<div class="form-group">

                                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>


                                </div>*@



                            <div class="form-group">
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-6" })
                                    <div class="col-md-6">

                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-6">
                                        @*@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control date-picker" } })*@
                                        <input id="MobileNumber" required="" name="MobileNumber" value="" class="form-control " placeholder="" type="text" />
                                        @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*</div>*@
                            </div>

                            <div class="form-group">
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-6" })
                                    <div class="col-md-6">
                                        @*@Html.EditorFor(model => model.BloodGroup, new {htmlAttributes = new {@class = "form-control"}})
                                            @Html.ValidationMessageFor(model => model.BloodGroup, "", new {@class = "text-danger"})*@

                                        <select id="ddlBloodGroup" class="form-control">
                                            <option value="">Select</option>
                                            <option value="A+">A+</option>
                                            <option value="A-">A-</option>
                                            <option value="B+">B+</option>
                                            <option value="B-">B-</option>
                                            <option value="O+">O+</option>
                                            <option value="O-">O-</option>
                                            <option value="AB+">AB+</option>
                                            <option value="AB-">AB-</option>
                                        </select>

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-6">
                                        @*@Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })*@
                                        <select id="ddlSex" class="form-control">
                                            <option value="">Select</option>
                                            <option value="MALE">MALE</option>
                                            <option value="FEMALE">FEMALE</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.EducationId, htmlAttributes: new { @class = "control-label col-md-6" })
                                    <div class="col-md-6">
                                        @Html.DropDownList("EducationId", null, htmlAttributes: new { @class = "form-control border-radius-5" })
                                        @Html.ValidationMessageFor(model => model.EducationId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @*<div class="form-group">*@
                                    @Html.LabelFor(model => model.OccupationId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-6">
                                        @Html.DropDownList("OccupationId", null, htmlAttributes: new { @class = "form-control border-radius-5" })
                                        @Html.ValidationMessageFor(model => model.OccupationId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>







                        </div>
                        <br /><br />
                        <div class="caption">
                            <i class="fa fa-question font-green-sharp"></i>
                            <span class="caption-subject font-green-sharp uppercase">Test Information</span>
                        </div>
                        <br />
                        <div class="col-md-12 row form-group">

                            <div class="col-md-3">
                                <input id="TestId" name="TestId" class="form-control" placeholder="Test Name" />
                            </div>

                            <div class="col-md-3">
                                <input id="Discount" name="Discount" class="form-control twodigitdecimalnumber" placeholder="Discount" oninput="calculate()" />
                            </div>

                            <div class="col-md-3">
                                <input id="Price" name="Price" class="form-control twodigitdecimalnumber" placeholder="Price" oninput="calculate()" />
                            </div>

                            <div class="col-md-2">
                                <input id="Total" name="Total" class="form-control twodigitdecimalnumber" placeholder="Total" disabled />
                            </div>

                            <div class="col-md-1">
                                <a id="addbtn" onclick="javascript: SetTestList(); " class="btn btn-primary dropdown-toggle">
                                    Add
                                </a>
                                <a id="updatebtn" onclick="javascript: SetTestList(); " class="btn btn-primary dropdown-toggle" style="display: none;">
                                    Update
                                </a>
                            </div>

                        </div>

                        <br /><br /><br /><br />
                        <div class="col-md-12 form-group">
                            <table class="table table-striped table-bordered table-hover" id="tabChiefComplaintList">
                                <thead>
                                    <tr>
                                        <th style="width: 15% !important">
                                            Test Name
                                        </th>
                                        <th style="width: 15% !important">
                                            Discount
                                        </th>
                                        <th style="width: 15% !important">
                                            Price
                                        </th>
                                        <th style="width: 15% !important">
                                            Total
                                        </th>
                                        <th style="width: 15% !important">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="testDetailsList"></tbody>
                            </table>
                        </div>
                    </div>




                    <br /><br />                    <br /><br /><br /><br />

                    <div class="" style="text-align: center;">
                        <a class="btn default" style="width: 15%;" href="@Url.Action("Index", "Patient", new {Area = "PatientInformation"})">Cancel</a>
                        <input type="submit" value="Save" class="btn green" style="width: 15%;" />
                    </div>

                }
            </div>
        </div>
        <!-- END Portlet PORTLET-->
    </div>
    <div class="col-md-1"></div>
</div>




@section page_styles
{
    @*<link href="~/assets/global/plugins/jcrop/css/jquery.Jcrop.css" rel="stylesheet" />
    <link href="~/assets/global/plugins/jquery-file-upload/css/jquery.fileupload.css" rel="stylesheet" />*@

    @*<link href="~/assets/global/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet"/>*@
    @*<link href="~/assets/global/plugins/select2/css/select2.css" rel="stylesheet" />*@
    <link href="~/Assets/global/plugins/bootstrap-summernote/summernote.css" rel="stylesheet" />
}


@section Scripts {

    <script src="~/Scripts/typeahead.bundle.min.js"></script>
    <script src="~/scripts/jquery.format.1.05.js"></script>

    @*<script src="~/assets/global/plugins/jcrop/js/jquery.Jcrop.js"></script>*@
    @*<script src="~/assets/global/plugins/jquery-file-upload/js/vendor/jquery.ui.widget.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.iframe-transport.js"></script>*@
    @*<script src="~/assets/global/plugins/jquery-file-upload/js/jquery.fileupload.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.fileupload-process.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.fileupload-image.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.fileupload-validate.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.fileupload-ui.js"></script>*@


    <script src="~/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>

    <script src="~/assets/pages/components-pickers.js"></script>

    <script src="~/assets/global/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js"></script>

    <script type="text/javascript">
        jQuery(document).ready(function () {
            allowInt();
            initPatientTestAutoComplete();
            $(".datetimepicker").datepicker();

            ComponentsPickers.init();
            $('#txtDateOfBirth').val(getTodate());
        });



        function getTodate() {
            var dob = new Date();
            var day = (dob.getDate() < 10 ? '0' : '') + dob.getDate();
            var month = ((dob.getMonth() + 1) < 10 ? '0' : '') + (dob.getMonth() + 1);
            return (month + "/" + day + "/" + dob.getFullYear());
        }

        function allowInt() {
            $(".integer").format({ precision: 0, allow_negative: false, autofix: true });
        }

        function initPatientTestAutoComplete() {
            $('#TestId').typeahead({
                hint: true,
                highlight: true,
                minLength: 2,
                limit: 8
            }, {
                source: function (searchString, cb) {
                    return $.ajax({
                        dataType: 'json',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        url: " /PatientInformation/Patient/LoadPatientTest",
                        data: "{'SearchString':'" + searchString + "'}",
                        chache: false,
                        success: function (data) {
                            var result = [];
                            $.each(data, function (index, val) {
                                result.push({
                                    Id: val.T_ID,
                                    Name: val.T_NAME,
                                    value: val.T_NAME
                                });
                            });
                            cb(result);
                        }
                    });
                }
            }).on("typeahead:selected", function (obj, patient) {
                $("#tId").val(patient.Id);
                LoadPrice();
                //$("#txtPatientName").val(patient.Name);
                //$("#txtMobileNumber").val(patient.Mobile);
            });

        }

        function LoadPrice() {
            $.ajax({

                type: "GET",
                cache: false,
                url: "@(@Url.Action("LoadPrice", "Patient", new {Area = "PatientInformation" }))",
                data: { "Id": $("#tId").val() },
            dataType: "html",
            success: function (result) {

                var t = JSON.parse(result);
                $('#Price').val(t.T_Price);
                $('#Total').val(t.T_Price);
               // $('#quantity').focus();
            },
            error: function (error) {
                //Metronic.unblockUI();
                var msg = 'Fail to load .';
                alert(msg);
            }
        });
        }

        function calculate() {
            var myBox1 = document.getElementById('Price').value;
            var myBox2 = document.getElementById('Discount').value;
            //var result = document.getElementById('SubTotal');
            var total = document.getElementById('Total');
            var myResult = myBox1 - (myBox1 * myBox2/100);
            total.value = myResult;
            //total.value = total;
        }

        function SetTestList() {
            //if (SellsDetailsValidationCheck()) {
                //App.blockUI();
                var loadArea = $("#testDetailsList");
                $.ajax({
                    type: "GET",
                    cache: false,
                    url: "@(@Url.Action("SetTestList", "Patient", new {Area = "PatientInformation" }))",
                    data: { "TestId": $('#tId').val(), "Discount": $('#Discount').val(), "Price": $('#Price').val(), "Total": $('#Total').val() },
                    dataType: "html",
                    success: function (result) {
                        //App.unblockUI();
                        //loadsellsDetails();
                        loadArea.html(result);
                        $('#TestId').val('');
                        $('#Discount').val('');
                        $('#Price').val('');
                        $('#Total').val('');

                        $('#addbtn').show();
                        $('#updatebtn').hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        //App.unblockUI();
                        var msg = 'Fail to set sells list.';
                        alert(msg);
                    }
                });
           // }
        }



        function EditTest(TestNameId) {
            $.ajax({
                type: "GET",
                cache: false,
                url: "@(@Url.Action("EditTestDetails", "Patient", new {Area = "PatientInformation" }))",
                data: { "TestId": TestNameId },
            dataType: "html",
            success: function (result) {
                //App.unblockUI();
                var value = JSON.parse(result);

                $('#TestId').val(value.TestName);
                //$('#ProductCategoryId').val(value.ProductCategoryName);
                //$('#ProId').val(value.ProductId);
                //$('#ProductId').val(value.ProductName);

                $('#Discount').val(value.Discount);
                $('#Price').val(value.Price);
                $('#Total').val(value.Total);
                $('#addbtn').hide();
                $('#updatebtn').show();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                //App.unblockUI();
                var msg = 'Fail to load test information.';
                alert(msg);
            }
        });
        }

        function DeleteTestDetails(Id, TestNameId) {
            var loadArea = $("#testDetailsList");
            $.ajax({
                type: "GET",
                cache: false,
                url: "@(@Url.Action("DeletePatientDetails", "Patient", new {Area = "PatientInformation" }))",
                data: { "Id": Id, "TestId": TestNameId },
            dataType: "html",
            success: function (result) {
                //loadsellsDetails();
                loadArea.html(result);

            },
            error: function (xhr, ajaxOptions, thrownError) {
                //App.unblockUI();
            }
        });
        }
    </script>

}

