
@using CsHealthcare.DataAccess.Entity.Accounts
@model IEnumerable<CsHealthcare.ViewModel.Accounts.LcModel>


<table class="table table-striped table-bordered table-hover" id="listName">
    <thead>
        <tr>
            <th style="width: 20% !important;">
                @Html.DisplayNameFor(model => model.LCNo)
            </th>
            <th style="width: 20% !important;">
                @Html.DisplayNameFor(model => model.IssueDate)
            </th>
            <th style="width: 20% !important;">
                @Html.DisplayNameFor(model => model.LCValue)
            </th>

            @*<th style="width: 20% !important;">
                @Html.DisplayNameFor((model => model.CurrencyTypeId))
            </th>*@
            <th style="width: 20% !important;">
                @Html.DisplayNameFor(model => model.InvoiceNo)
            </th>

            <th style="width: 20% !important;">
                @Html.DisplayNameFor(model => model.InvoiceValue)
            </th>

            @*<th style="width: 20% !important;">
                @Html.DisplayNameFor(model => model.InvoiceCurrencyTypeId)
            </th>*@

            <th style="width: 20% !important;">
                @Html.DisplayNameFor(model => model.ShipDate)
            </th>
            <th style="width: 20% !important;">
                @Html.DisplayNameFor(model => model.ShipQty)
            </th>
            <th style="width: 20% !important;">
                @Html.DisplayNameFor(model => model.PaidOn)
            </th>

            <th style="width: 15% !important;">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                <td style="width: 20% !important;">
                    @Html.DisplayFor(modelItem => item.LCNo)
                </td>
                <td style="width: 20% !important;">
                    @Html.DisplayFor(modelItem => item.IssueDate)
                </td>
                @*<td style="width: 20% !important;">
                    @Html.DisplayFor(modelItem => item.LCValue)
                </td>*@
                
                <td style="width: 20% !important;">
              
                    @if (item.CurrencyTypeId == 1)
                    {

                        <span>&#2547;</span> @Html.DisplayFor(modelItem => item.LCValue)

                    }
                    else if (item.CurrencyTypeId == 2)
                    {

                        <span>&#36;</span>
                        @Html.DisplayFor(modelItem => item.LCValue)

                    }
                    else
                    {

                        <span>&#8364;</span>
                        @Html.DisplayFor(modelItem => item.LCValue)

                    }


                </td>

                
                <td style="width: 20% !important;">
                    @Html.DisplayFor(modelItem => item.InvoiceNo)
                </td>
                @*<td style="width: 20% !important;">
                    @Html.DisplayFor(modelItem => item.InvoiceValue)
                </td>*@
                <td style="width: 20% !important;">
                
                    @if (item.InvoiceCurrencyTypeId == 1)
                    {

                        <span>&#2547;</span> @Html.DisplayFor(modelItem => item.InvoiceValue)

                    }
                    else if (item.InvoiceCurrencyTypeId == 2)
                    {

                        <span>&#36;</span>
                        @Html.DisplayFor(modelItem => item.InvoiceValue)

                    }
                    else
                    {

                        <span>&#8364;</span>
                        @Html.DisplayFor(modelItem => item.InvoiceValue)

                    }



                </td>
                <td style="width: 20% !important;">
                    @Html.DisplayFor(modelItem => item.ShipDate)
                </td>
                <td style="width: 20% !important;">
                    @Html.DisplayFor(modelItem => item.ShipQty)
                </td>

                <td style="width: 20% !important;">
                    @Html.DisplayFor(modelItem => item.PaidOn)
                </td>

                <td style="width: 15% !important;">
                    <a class="btn btn-xs green" title="Edit" href="@(Url.Action("Edit", "Lc", new {id = item.Id}))"><i class="glyphicon glyphicon-pencil"></i></a>
                    @*<a class="btn btn-xs green" title="Edit" href="@(Url.Action("DoseList", "Drug", new { id = item.Id }))" data-modal=""><i class="glyphicon glyphicon-pencil"></i></a>*@

                </td>
            </tr>
        }
    </tbody>
</table>

@*<script src="~/Assets/global/Page/table-managed.js"></script>*@
<script>
    jQuery(document).ready(function () {

        var table = $('#listName');

        // begin first table
        table.dataTable({

            // Internationalisation. For more info refer to http://datatables.net/manual/i18n
            "language": {
                "aria": {
                    "sortAscending": ": activate to sort column ascending",
                    "sortDescending": ": activate to sort column descending"
                },
                "emptyTable": "No data available in table",
                "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                "infoEmpty": "No entries found",
                "infoFiltered": "(filtered1 from _MAX_ total entries)",
                "lengthMenu": "Show _MENU_ entries",
                "search": "Search:",
                "zeroRecords": "No matching records found"
            },

            "bStateSave": true, // save datatable state(pagination, sort, etc) in cookie.


            "lengthMenu": [
                [15, 25, 50, -1],
                [15, 25, 50, "All"] // change per page values here
            ],
            // set the initial value
            "pageLength": 15,
            "pagingType": "bootstrap_full_number",
            "language": {
                "search": "My search: ",
                "lengthMenu": "  _MENU_ records",
                "paginate": {
                    "previous": "Prev",
                    "next": "Next",
                    "last": "Last",
                    "first": "First"
                }
            },
            "columnDefs": [{  // set default column settings
                'orderable': false,
                'targets': [8]
            }, {
                "searchable": false,
                "targets": [8]
            }],
            "order": [
                [1, "asc"]
            ] // set first column as a default sort by asc
        });

        var tableWrapper = jQuery('#OptionList_wrapper');

        tableWrapper.find('.dataTables_length select').addClass("form-control input-xsmall input-inline"); // modify table per page dropdown
    });
</script>








