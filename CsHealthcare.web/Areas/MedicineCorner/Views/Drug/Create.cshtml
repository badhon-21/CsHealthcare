
@model CsHealthcare.ViewModel.MedicineCorner.DrugModel

@{
    ViewBag.Title = "Cs-Healthcare | Insert Medicine Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <!-- BEGIN Portlet PORTLET-->
        <div class="portlet light">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-question font-green-sharp"></i>
                    <span class="caption-subject font-green-sharp uppercase">Medicine Information</span>
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse">
                    </a>
                    <a href="javascript:;" class="fullscreen">
                    </a>
                </div>
                <div class="actions margin-right-10">

                </div>
            </div>
            <hr style="margin-top: 0;">
            <div class="portlet-body portlet-empty">

                @using (Html.BeginForm())
                {
                    <div class="modal-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            
                            
                           

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.D_DM_ID, htmlAttributes: new { @class = "control-label col-md-3" })*@
                                <label class="control-label col-md-3" for="D_DM_ID">Company Name</label>
                                <div class="col-md-8">
                                    @Html.DropDownList("D_DM_ID", null, htmlAttributes: new { @class = "form-control border-radius-5", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.D_DM_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.D_DPT_ID, htmlAttributes: new { @class = "control-label col-md-3" })*@
                                <label class="control-label col-md-3" for="D_DPT_ID">Drug Type</label>
                                <div class="col-md-8">
                                    @Html.DropDownList("D_DPT_ID", null, htmlAttributes: new { @class = "form-control border-radius-5", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.D_DPT_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.D_TRADE_NAME, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.D_TRADE_NAME, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.D_TRADE_NAME, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.D_GENERIC_NAME, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    <input id="D_GENERIC_NAME" name="D_GENERIC_NAME" class="form-control" value="" placeholder="" />
                                    @Html.ValidationMessageFor(model => model.D_GENERIC_NAME, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.D_UNIT_STRENGTH, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.D_UNIT_STRENGTH, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.D_UNIT_STRENGTH, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group ">
                                @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control decimal", @type = "text", } })
                                    @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control integer", @type = "text" } })
                                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                </div>
                                @*</div>
            <div class="form-group">*@
                                @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control integer", @type = "text" } })
                                    @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.D_REORDER_LEVEL, htmlAttributes: new {@class = "control-label col-md-3"})
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.D_REORDER_LEVEL, new {htmlAttributes = new {@class = "form-control integer", @type = "text"}})
                                    @Html.ValidationMessageFor(model => model.D_REORDER_LEVEL, "", new {@class = "text-danger"})
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control integer", @type = "text" } })
                                    @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group ">
                                @Html.LabelFor(model => model.D_DISCOUNT, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.D_DISCOUNT, new { htmlAttributes = new { @class = "form-control integer", @type = "text" } })
                                    @Html.ValidationMessageFor(model => model.D_DISCOUNT, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.D_PACK_QTY, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.D_PACK_QTY, new { htmlAttributes = new { @class = "form-control integer", @type = "text" } })
                                    @Html.ValidationMessageFor(model => model.D_PACK_QTY, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.D_STATUS, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-5">
                                    @Html.DropDownList("D_STATUS", new List<SelectListItem>() { new SelectListItem { Text = "Active", Value = "A" }, new SelectListItem { Text = "Inactive", Value = "I" } }, new { @class = "form-control" })
                                </div>
                            </div>
                            
                            
                        </div>
                    </div>

                    <div class="modal-footer">
                        <a class="btn default" style="width: 15%;" href="@Url.Action("Index", "Drug", new {Area = "MedicineCorner"})">Cancel</a>
                        <input type="submit" value="Save" class="btn green" style="width: 15%;" />
                    </div>

                }
            </div>
        </div>
        <!-- END Portlet PORTLET-->
    </div>
    <div class="col-md-3"></div>
</div>





@section page_styles
{
    
    <link href="~/assets/global/plugins/typeahead/typeahead.css" rel="stylesheet" />
    

    <style>
        .tt-query {
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        }

        .tt-hint {
            color: #999;
        }

        .tt-dropdown-menu { /* used to be tt-dropdown-menu in older versions */
            width: 422px;
            margin-top: 4px;
            padding: 4px 0;
            background-color: #fff;
            border: 1px solid #ccc;
            border: 1px solid rgba(0, 0, 0, 0.2);
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            border-radius: 4px;
            -webkit-box-shadow: 0 5px 10px rgba(0,0,0,.2);
            -moz-box-shadow: 0 5px 10px rgba(0,0,0,.2);
            box-shadow: 0 5px 10px rgba(0,0,0,.2);
        }

        .tt-suggestion {
            padding: 3px 20px;
            line-height: 24px;
        }

            .tt-suggestion.tt-cursor, .tt-suggestion:hover {
                color: #fff;
                background-color: #0097cf;
            }

            .tt-suggestion p {
                margin: 0;
            }
    </style>
}
@section Scripts {
    <script src="~/Scripts/jquery.format.1.05.js"></script>
    <script src="~/Scripts/typeahead.bundle.min.js"></script>

    <script type="text/javascript">
        jQuery(document).ready(function () {
            allowInt();
            initGenericNameAutoComplete();
        });

        function allowInt() {
            $(".integer").format({ precision: 0, allow_negative: false, autofix: true });
            $(".decimal").format({ precision: 4, allow_negative: false, autofix: true });
        }

        function initGenericNameAutoComplete() {
            $('#D_GENERIC_NAME').typeahead({
                hint: true,
                highlight: true,
                minLength: 2,
                limit: 8
            }, {
                source: function (searchString, cb) {
                    return $.ajax({
                        dataType: 'json',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        url: " /MedicineCorner/Drug/LoadGenericName",
                        data: "{'SearchString':'" + searchString + "'}",
                        chache: false,
                        success: function (data) {
                            var result = [];
                            $.each(data, function (index, val) {
                                result.push({
                                    //Id: val.Id,
                                    Name: val.D_GENERIC_NAME,
                                    value: val.D_GENERIC_NAME
                                });
                            });
                            cb(result);
                        }
                    });
                }
            }).on("typeahead:selected", function (obj, patient) {
                // $("#ReferenceName").val(patient.Name);
                //LoadPrice();
                //$("#txtPatientName").val(patient.Name);
                //$("#txtMobileNumber").val(patient.Mobile);
            });

        }
       
     

        
       

    </script>

}




