
@model CsHealthcare.ViewModel.Diagnostic.TestRequestModel

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <!-- BEGIN Portlet PORTLET-->
        <div class="portlet light">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-question font-green-sharp"></i>
                    <span class="caption-subject font-green-sharp uppercase">Edit Test Request Information</span>
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse">
                    </a>
                    <a href="javascript:;" class="fullscreen">
                    </a>
                </div>
                <div class="actions margin-right-10">

                </div>
            </div>
            <hr style="margin-top: 0;">
            <div class="portlet-body portlet-empty">


                @using (Html.BeginForm())
                {
                    @*@Html.AntiForgeryToken()*@

                    <div class="modal-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.PatientId)
                            @Html.HiddenFor(model => model.TestNameId)






                            <div class="form-group">
                                @Html.LabelFor(model => model.PatientName, htmlAttributes: new {@class = "control-label col-md-3"})
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.PatientName, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.ValidationMessageFor(model => model.PatientName, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TestName, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.TestName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TestName, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.Notes, htmlAttributes: new {@class = "control-label col-md-3"})
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Notes, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.ValidationMessageFor(model => model.Notes, "", new {@class = "text-danger"})
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CompletedBy, htmlAttributes: new {@class = "control-label col-md-3"})
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.CompletedBy, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.ValidationMessageFor(model => model.CompletedBy, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                               
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        <select  class="form-control" name="Status" id="status">
                                            <option value="Paid" selected="selected">Paid</option>
                                            <option value="UnPaid">UnPaid</option>
                                        </select>
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                               


                            </div>

                        </div>
                    </div>

                    <div class="modal-footer">
                        <a class="btn default" style="width: 15%;" href="@Url.Action("Index", "TestRequest", new {Area = "Diagnostic" })">Cancel</a>
                        <input type="submit" value="Update" class="btn green" style="width: 15%;" />
                    </div>
                }
            </div>
        </div>
        <!-- END Portlet PORTLET-->
    </div>
    <div class="col-md-3"></div>
</div>

<div id='myModal' class='modal fade in' tabindex="-1" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/Scripts/jquery.format.1.05.js"></script>
    <script src="~/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function () {
            $(".datetimepicker").datepicker();
            $('#status').val('@ViewBag.Status');
            $('#endday').on('change', function () {
                LoadDay();

            });
        });

        function LoadDay() {
            $.ajax({
                type: "GET",
                cache: false,
                url: "@(@Url.Action("NoOfDays", "HoliDay", new {Area = "HumanResource" }))",
                data: { "StartDay": $('#startday').val(), "EndDay": $('#endday').val() },

                dataType: "html",
                success: function (result) {
                    //var t = JSON.parse(result);
                    //alert(t);
                    //$('#Rate').val(t.price);
                    $('#noDay').val(result);
                },
                error: function (error) {
                    //Metronic.unblockUI();
                    var msg = 'Fail to load .';
                    alert(msg);
                }
            });
        }


    </script>

}
















