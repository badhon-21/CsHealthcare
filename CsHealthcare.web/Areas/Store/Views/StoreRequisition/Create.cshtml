
@model CsHealthcare.ViewModel.Store.StoreRequisitionModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "New Store Requisition Information";
}


<div class="row">
    @using (Html.BeginForm("Create", "StoreRequisition", new { area = "Store" }, FormMethod.Post, new { @class = "form-horizontal form-row-seperated" }))
    {
        @Html.AntiForgeryToken()
        <div class="col-md-12">

            <div class="portlet light">
                <div class="portlet-title">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <div class="caption">
                                <i class="icon-puzzle font-grey-gallery"></i>
                                <span class="caption-subject bold font-grey-gallery uppercase">
                                    @ViewBag.Title
                                </span>
                            </div>
                        </div>
                        @*<div class="col-md-6">

                                <input type="submit" value="SAVE" class="btn dark " style="width: 25%; margin-left:40%" />
                                <a href="@Url.Action("Index", "EmployeeInfo", new {Area = "HumanResource"})" type="button" class="btn green" style="margin-left: 1%;width:25%">Back</a>
                            </div>*@
                    </div>
                </div>
                <div class="portlet-body">



                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <input type="hidden" id="depId" name="DepartmentId" value="" />
                        <input type="hidden" id="Id" name="Id" value="@Model.Id" />


                        <div class="col-md-12 row form-group">
                            <div class="col-md-5">

                                <div class="control-label col-md-4" style="text-align: left">
                                    <label>Requisition No</label>
                                </div>
                                <div class="col-md-4 row">
                                    @Html.EditorFor(model => model.RequisitionNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RequisitionNo, "", new { @class = "text-danger" })


                                </div>

                            </div>
                            <div class="col-md-5">
                                <div class="control-label col-md-4" style="text-align: left">Entry Date </div>
                                <div class="col-md-7">

                                    @Html.EditorFor(model => model.RequisitionDate, new { htmlAttributes = new { @class = "form-control datetimepicker", @type = "datetime", @required = "required", @value = "@DateTime.Now" } })
                                    @Html.ValidationMessageFor(model => model.RequisitionDate, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>

                        <div class="col-md-12 row form-group">
                            <div class="col-md-9">
                                <div class="control-label col-md-2" style="text-align: left">
                                    <label>Department </label>
                                </div>
                                <div class="col-md-8">
                                    <input class="form-control" id="DeptName" name="DepartmentName" placeholder="" />
                                    @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
                                </div>

                            </div>

                        </div>

                        <div class="col-md-12 row form-group">
                            <div class="col-md-9">
                                <div class="control-label col-md-2" style="text-align: left">
                                    <label>Requisition By </label>
                                </div>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.RequisitionBy, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RequisitionBy, "", new { @class = "text-danger" })
                                </div>

                            </div>

                        </div>




                        <div class="form-group">

                            <div class="col-md-12">

                                <div class="col-md-12 row form-group">
                                    @*<div><h4>Pharmacy Requisition Details</h4>
                                        </div>*@
                                    <div class="caption">
                                        <i class="icon-puzzle font-grey-gallery"></i>
                                        <span class="caption-subject bold font-grey-gallery uppercase">
                                        Store Requisition Details
                                        </span>
                                    </div>
                                    <hr />


                                    <input type="hidden" id="dId" name="drugId" value="" />
                                    <div class="col-md-3" style="width: 25% !important">

                                        <input class="form-control" id="StoreItemId" name="StoreItemId" placeholder="Item Name" />
                                    </div>
                                 

                                    <div class="col-md-3" style="width: 25% !important">
                                        <input id="Quantity" name="Quantity" class="form-control" placeholder="Quantity" />
                                    </div>








                                    <div class="col-md-3">

                                        <a id="addbtn" onclick="javascript: SetStoreDetails(); " class="btn btn-primary dropdown-toggle">
                                            Add
                                        </a>
                                        <a id="updatebtn" onclick="javascript: SetStoreDetails(); " class="btn btn-primary dropdown-toggle" style="display: none;">
                                            Update
                                        </a>
                                    </div>
                                </div>
                                <br /><br />
                                <div class="col-md-6 form-group">
                                    <table class="table table-striped table-bordered table-hover" id="tabChiefComplaintList">
                                        <thead>
                                            <tr>
                                                <th style="width: 10% !important">
                                                   Item Name
                                                </th>
                                               

                                                <th style="width: 10% !important">
                                                    Quantity
                                                </th>


                                                @*<th style="width: 15% !important">Action</th>*@
                                            </tr>
                                        </thead>
                                        <tbody id="storeList"></tbody>
                                    </table>
                                </div>

                            </div>

                        </div>

                        <div class="" style="text-align: center;">
                            <a class="btn default" style="width: 15%; margin-top: 30px" href="@Url.Action("Index", "StoreRequisition", new {Area = "Store"})">Cancel</a>
                            <input type="submit" value="Save" class="btn green" style="width: 15%; margin-top: 30px" />
                        </div>
                    </div>

                </div>
            </div>
        </div>
      
    }
</div>

@section page_styles {
    <link href="~/assets/global/plugins/jcrop/css/jquery.Jcrop.css" rel="stylesheet" />
    <link href="~/assets/global/plugins/jquery-file-upload/css/jquery.fileupload.css" rel="stylesheet" />
    <link href="~/Assets/global/plugins/bootstrap-summernote/summernote.css" rel="stylesheet" />

    <link href="~/assets/global/plugins/typeahead/typeahead.css" rel="stylesheet" />

    <style>
        .tt-query {
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        }

        .tt-hint {
            color: #999;
        }

        .tt-dropdown-menu { /* used to be tt-dropdown-menu in older versions */
            width: 422px;
            margin-top: 4px;
            padding: 4px 0;
            background-color: #fff;
            border: 1px solid #ccc;
            border: 1px solid rgba(0, 0, 0, 0.2);
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            border-radius: 4px;
            -webkit-box-shadow: 0 5px 10px rgba(0,0,0,.2);
            -moz-box-shadow: 0 5px 10px rgba(0,0,0,.2);
            box-shadow: 0 5px 10px rgba(0,0,0,.2);
            max-height: 200px;
            overflow: auto;
        }

        .tt-suggestion {
            padding: 3px 20px;
            line-height: 24px;
        }

            .tt-suggestion.tt-cursor, .tt-suggestion:hover {
                color: #fff;
                background-color: #0097cf;
            }

            .tt-suggestion p {
                margin: 0;
            }
    </style>
}
@section Scripts {
    <script src="~/assets/global/plugins/jquery-file-upload/js/vendor/jquery.ui.widget.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.iframe-transport.js"></script>
    <script src="~/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.fileupload.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.fileupload-process.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.fileupload-image.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.fileupload-validate.js"></script>
    <script src="~/assets/global/plugins/jquery-file-upload/js/jquery.fileupload-ui.js"></script>
    <script src="~/Scripts/typeahead.bundle.min.js"></script>
    <script src="~/assets/pages/components-pickers.js"></script>
    <script src="~/assets/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
    <script>
        $(document).ready(function () {
            $(".datetimepicker").datepicker('setDate', 'now');;
            initStoreItemAutoComplete();
             initDeptItemAutoComplete();
        });

        function initStoreItemAutoComplete() {
            $('#StoreItemId').typeahead({
                hint: true,
                highlight: true,
                minLength: 2,
                limit: 8
            }, {
                source: function (searchString, cb) {
                    return $.ajax({
                        dataType: 'json',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        url: " /Store/StoreRequisition/LoadStoreItem",
                        data: "{'SearchString':'" + searchString + "'}",
                        chache: false,
                        success: function (data) {
                            var result = [];
                            $.each(data, function (index, val) {
                                result.push({
                                    Id: val.Id,
                                    Name: val.ItemName,
                                    value: val.ItemName
                                });
                            });
                            cb(result);
                        }
                    });
                }
            }).on("typeahead:selected", function (obj, store) {
                $("#dId").val(store.Id);
               

            });

        }

        function initDeptItemAutoComplete() {
            $('#DeptName').typeahead({
                hint: true,
                highlight: true,
                minLength: 2,
                limit: 8
            }, {
                source: function (searchString, cb) {
                    return $.ajax({
                        dataType: 'json',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        url: " /Store/StoreRequisition/LoadDepartment",
                        data: "{'SearchString':'" + searchString + "'}",
                        chache: false,
                        success: function (data) {
                            var result = [];
                            $.each(data, function (index, val) {
                                result.push({
                                    Id: val.Id,
                                    Name: val.Name,
                                    value: val.Name
                                });
                            });
                            cb(result);
                        }
                    });
                }
            }).on("typeahead:selected", function (obj, dept) {
                $("#depId").val(dept.Id);


            });

        }




    function SetStoreDetails() {
            //if (SellsDetailsValidationCheck()) {
            //App.blockUI();
            var loadArea = $("#storeList");
            $.ajax({
                type: "GET",
                cache: false,
                url: "@(@Url.Action("SetstoreRequisitionList", "StoreRequisition", new {Area = "Store" }))",
                data: { "storeId": $('#dId').val(), "Quantity": $('#Quantity').val() },
            dataType: "html",
            success: function (result) {
                //App.unblockUI();
                //loadsellsDetails();
                loadArea.html(result);
                $('#StoreItemId').val('');
                $('#Quantity').val('');



                $('#addbtn').show();
                $('#updatebtn').hide();


            },
            error: function (xhr, ajaxOptions, thrownError) {
                //App.unblockUI();
                var msg = 'Fail to set Drug Details list.';
                alert(msg);
            }
        });


        }
    </script>
}
